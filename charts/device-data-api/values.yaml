replicaCount: 1
image:
  repository: dimozone/device-data-api
  pullPolicy: IfNotPresent
  tag: 059d235
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: ''
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1001
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - all
cronJob:
  enabled: false
  schedule: 0 0 * * 0
env:
  ENVIRONMENT: dev
  PORT: '8080'
  GRPC_PORT: '8086'
  LOG_LEVEL: info
  SERVICE_NAME: device-data-api
  JWT_KEY_SET_URL: https://auth.dev.dimo.zone/keys
  DEPLOYMENT_BASE_URL: https://device-data-api.dev.dimo.zone
  DEVICE_DATA_INDEX_NAME: device-status-dev*
  DEVICE_DATA_INDEX_NAME_V2: vss-status-dev*
  ELASTIC_INDEX: device-status-dev*
  DEVICES_APIGRPC_ADDR: devices-api-dev:8086
  EMAIL_PORT: '587'
  AWS_BUCKET_NAME: dimo-network-device-data-export-dev
  AWS_REGION: us-east-2
  EMAIL_FROM: hello@dimo.zone
  USERS_API_GRPC_ADDR: users-api-dev:8086
  ENABLE_PRIVILEGES: true
  TOKEN_EXCHANGE_JWK_KEY_SET_URL: http://dex-roles-rights.dev.svc.cluster.local:5556/keys
  VEHICLE_NFT_ADDRESS: '0x45fbcd3ef7361d156e8b16f5538ae36dedf61da8'
  NATS_URL: nats-dev:4222
  NATS_STREAM_NAME: DATA_EXPORT_TASKS
  NATS_DATA_DOWNLOAD_SUBJECT: data_export_tasks
  NATS_DURABLE_CONSUMER: data-export-task-consumer
  NATS_ACK_TIMEOUT: 2m
  DEVICE_DEFINITIONS_GRPC_ADDR: device-definitions-api-dev:8086
  DB_PORT: '5432'
  DB_NAME: device_data_api
  DB_MAX_OPEN_CONNECTIONS: '10'
  DB_MAX_IDLE_CONNECTIONS: '3'
  KAFKA_BROKERS: kafka-dev-dimo-kafka-kafka-brokers:9092
  DEVICE_STATUS_TOPIC: topic.device.status
  EVENTS_TOPIC: topic.event
  DEVICE_FINGERPRINT_TOPIC: topic.device.fingerprint
  DEVICE_FINGERPRINT_CONSUMER_GROUP: device-fingerprint-vin-data
service:
  type: ClusterIP
  ports:
    mon-http:
      port: 8888
      targetPort: mon-http
      protocol: TCP
    http:
      port: 8080
      targetPort: http
      protocol: TCP
    grpc:
      port: 8086
      targetPort: grpc
      protocol: TCP
ports:
  - name: mon-http
    containerPort: 8888
    protocol: TCP
  - name: http
    containerPort: 8080
    protocol: TCP
  - name: grpc
    containerPort: 8086
    protocol: TCP
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: https://app.dev.dimo.zone
    nginx.ingress.kubernetes.io/limit-rps: '3'
    external-dns.alpha.kubernetes.io/hostname: device-data-api.dev.dimo.zone
  hosts:
    - host: device-data-api.dev.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
resources:
  limits:
    cpu: 250m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget:
  minAvailable: 0
serviceMonitor:
  enabled: true
  path: /metrics
  port: mon-http
  interval: 30s
