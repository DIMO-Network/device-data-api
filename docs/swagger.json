{
    "swagger": "2.0",
    "info": {
        "title": "DIMO Device Data API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/user/device-data/{userDeviceID}/daily-distance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get kilometers driven for a userDeviceID each day.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user device id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IANAS time zone id, e.g., America/Los_Angeles",
                        "name": "time_zone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DailyDistanceResp"
                        }
                    },
                    "404": {
                        "description": "no device found for user with provided parameters"
                    }
                }
            }
        },
        "/user/device-data/{userDeviceID}/distance-driven": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get kilometers driven for a userDeviceID since connected (ie. since we have data available)\nif it returns 0 for distanceDriven it means we have no odometer data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user device id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "no device found for user with provided parameters"
                    }
                }
            }
        },
        "/user/device-data/{userDeviceID}/export/json/email": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Enqueues a data export job for the specified device. A link to download\na large JSON file of signals will be emailed to the address on file for the\ncurrent user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "example": "2OQjmqUt9dguQbJt1WImuVfje3W",
                        "description": "Device id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/device-data/{userDeviceID}/historical": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all historical data for a userDeviceID, within start and end range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "startDate eg 2022-01-02. if empty two weeks back",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "endDate eg 2022-03-01. if empty today",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/device-data/{userDeviceID}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the latest status update for the device. May return 404 if the\nuser does not have a device with the ID, or if no status updates have come. Note this endpoint also exists under nft_controllers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-devices"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user device ID",
                        "name": "user_device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DeviceSnapshot"
                        }
                    }
                }
            }
        },
        "/vehicle/{tokenID}/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all historical data for a tokenID, within start and end range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "startDate eg 2022-01-02. if empty two weeks back",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "endDate eg 2022-03-01. if empty today",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/vehicle/{tokenId}/status": {
            "get": {
                "description": "Returns the latest status update for the vehicle with a given token id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DeviceSnapshot"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_controllers.DailyDistanceDay": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                }
            }
        },
        "internal_controllers.DailyDistanceResp": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_controllers.DailyDistanceDay"
                    }
                }
            }
        },
        "internal_controllers.DeviceSnapshot": {
            "type": "object",
            "properties": {
                "ambientTemp": {
                    "type": "number"
                },
                "batteryCapacity": {
                    "type": "integer"
                },
                "batteryVoltage": {
                    "type": "number"
                },
                "chargeLimit": {
                    "type": "number"
                },
                "charging": {
                    "type": "boolean"
                },
                "fuelPercentRemaining": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "odometer": {
                    "type": "number"
                },
                "oil": {
                    "type": "number"
                },
                "range": {
                    "type": "number"
                },
                "recordCreatedAt": {
                    "type": "string"
                },
                "recordUpdatedAt": {
                    "type": "string"
                },
                "soc": {
                    "type": "number"
                },
                "tirePressure": {
                    "$ref": "#/definitions/smartcar.TirePressure"
                }
            }
        },
        "smartcar.TirePressure": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Deprecated: Should use DataAge instead of Age",
                    "type": "string"
                },
                "backLeft": {
                    "type": "number"
                },
                "backRight": {
                    "type": "number"
                },
                "dataAge": {
                    "type": "string"
                },
                "frontLeft": {
                    "type": "number"
                },
                "frontRight": {
                    "type": "number"
                },
                "requestId": {
                    "type": "string"
                },
                "unitSystem": {
                    "$ref": "#/definitions/smartcar.UnitSystem"
                }
            }
        },
        "smartcar.UnitSystem": {
            "type": "string",
            "enum": [
                "metric",
                "imperial"
            ],
            "x-enum-varnames": [
                "Metric",
                "Imperial"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}