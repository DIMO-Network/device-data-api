{
    "swagger": "2.0",
    "info": {
        "title": "DIMO Device Data API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/v1/autopi/last-seen/{ethAddr}": {
            "get": {
                "security": [
                    {
                        "PreSharedKey": []
                    }
                ],
                "description": "Specific for AutoPi - get when a device last sent data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "autopi"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "device ethereum address",
                        "name": "ethAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "invalid eth addr"
                    },
                    "404": {
                        "description": "no device found with eth addr or no data found"
                    },
                    "500": {
                        "description": "no device found or no data found, or other transient error"
                    }
                }
            }
        },
        "/v1/user/device-data/{userDeviceID}/daily-distance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get kilometers driven for a userDeviceID each day.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user device id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IANAS time zone id, e.g., America/Los_Angeles",
                        "name": "time_zone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DailyDistanceResp"
                        }
                    },
                    "404": {
                        "description": "no device found for user with provided parameters"
                    }
                }
            }
        },
        "/v1/user/device-data/{userDeviceID}/distance-driven": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get kilometers driven for a userDeviceID since connected (ie. since we have data available)\nif it returns 0 for distanceDriven it means we have no odometer data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user device id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "no device found for user with provided parameters"
                    }
                }
            }
        },
        "/v1/user/device-data/{userDeviceID}/export/json/email": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Enqueues a data export job for the specified device. A link to download\na large JSON file of signals will be emailed to the address on file for the\ncurrent user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "example": "2OQjmqUt9dguQbJt1WImuVfje3W",
                        "description": "Device id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/user/device-data/{userDeviceID}/historical": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all historical data for a userDeviceID, within start and end range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userDeviceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "startDate eg 2022-01-02. if empty two weeks back",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "endDate eg 2022-03-01. if empty today",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/user/device-data/{userDeviceID}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the latest status update for the device. May return 404 if the\nuser does not have a device with the ID, or if no status updates have come. Note this endpoint also exists under nft_controllers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "user device ID",
                        "name": "user_device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_DIMO-Network_device-data-api_internal_response.DeviceSnapshot"
                        }
                    }
                }
            }
        },
        "/v1/vehicle/{tokenID}/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all historical data for a tokenID, within start and end range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "startDate ex: 2022-01-02; or,  2022-01-02T09:00:00Z; if empty two weeks back",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "endDate ex: 2022-03-01; or, 2023-03-01T09:00:00Z; if empty today",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/vehicle/{tokenId}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the latest status update for the vehicle with a given token id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_DIMO-Network_device-data-api_internal_response.DeviceSnapshot"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/vehicle/{tokenId}/status-raw": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the latest status update for the vehicle with a given token id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v2/vehicle/{tokenID}/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all historical data for a tokenID, within start and end range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "startTime is an RFC3339 formatted date-time string. If empty two weeks from endTime",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "endTime is an RFC3339 formatted date-time string. If empty the current time",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "number of data points to return, default 1000",
                        "name": "buckets",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/vehicle/{tokenId}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the latest status update for the vehicle with a given token id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-data"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "tokenId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_DIMO-Network_device-data-api_internal_response.Device"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_DIMO-Network_device-data-api_internal_response.Device": {
            "type": "object",
            "properties": {
                "recordCreatedAt": {
                    "type": "string"
                },
                "recordUpdatedAt": {
                    "description": "Other",
                    "type": "string"
                },
                "status": {
                    "description": "VSS status data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_DIMO-Network_device-data-api_internal_response.Status"
                        }
                    ]
                }
            }
        },
        "github_com_DIMO-Network_device-data-api_internal_response.DeviceSnapshot": {
            "type": "object",
            "properties": {
                "ambientTemp": {
                    "type": "number"
                },
                "batteryCapacity": {
                    "type": "integer"
                },
                "batteryVoltage": {
                    "type": "number"
                },
                "chargeLimit": {
                    "type": "number"
                },
                "charging": {
                    "type": "boolean"
                },
                "fuelPercentRemaining": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "odometer": {
                    "type": "number"
                },
                "oil": {
                    "type": "number"
                },
                "range": {
                    "type": "number"
                },
                "recordCreatedAt": {
                    "type": "string"
                },
                "recordUpdatedAt": {
                    "type": "string"
                },
                "soc": {
                    "type": "number"
                },
                "tirePressure": {
                    "$ref": "#/definitions/smartcar.TirePressure"
                }
            }
        },
        "github_com_DIMO-Network_device-data-api_internal_response.Status": {
            "type": "object",
            "properties": {
                "chassis": {
                    "description": "All data concerning steering, suspension, wheels, and brakes.",
                    "type": "object",
                    "properties": {
                        "axle": {
                            "description": "Axle signals",
                            "type": "object",
                            "properties": {
                                "row1": {
                                    "type": "object",
                                    "properties": {
                                        "wheel": {
                                            "description": "Wheel signals for axle",
                                            "type": "object",
                                            "properties": {
                                                "left": {
                                                    "description": "Wheel signals for axle",
                                                    "type": "object",
                                                    "properties": {
                                                        "left": {
                                                            "description": "Tire signals for wheel.",
                                                            "type": "object",
                                                            "properties": {
                                                                "pressure": {
                                                                    "description": "Tire pressure in kilo-Pascal.",
                                                                    "allOf": [
                                                                        {
                                                                            "$ref": "#/definitions/null.Float64"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "description": "Wheel signals for axle",
                                                    "type": "object",
                                                    "properties": {
                                                        "right": {
                                                            "description": "Tire signals for wheel.",
                                                            "type": "object",
                                                            "properties": {
                                                                "pressure": {
                                                                    "description": "Tire pressure in kilo-Pascal.",
                                                                    "allOf": [
                                                                        {
                                                                            "$ref": "#/definitions/null.Float64"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "row2": {
                                    "type": "object",
                                    "properties": {
                                        "wheel": {
                                            "description": "Wheel signals for axle",
                                            "type": "object",
                                            "properties": {
                                                "left": {
                                                    "description": "Wheel signals for axle",
                                                    "type": "object",
                                                    "properties": {
                                                        "left": {
                                                            "description": "Tire signals for wheel.",
                                                            "type": "object",
                                                            "properties": {
                                                                "pressure": {
                                                                    "description": "Tire pressure in kilo-Pascal.",
                                                                    "allOf": [
                                                                        {
                                                                            "$ref": "#/definitions/null.Float64"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "description": "Wheel signals for axle",
                                                    "type": "object",
                                                    "properties": {
                                                        "right": {
                                                            "description": "Tire signals for wheel.",
                                                            "type": "object",
                                                            "properties": {
                                                                "pressure": {
                                                                    "description": "Tire pressure in kilo-Pascal.",
                                                                    "allOf": [
                                                                        {
                                                                            "$ref": "#/definitions/null.Float64"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "currentLocation": {
                    "type": "object",
                    "properties": {
                        "altitude": {
                            "description": "Current altitude relative to WGS 84 reference ellipsoid, as measured at the position of GNSS receiver antenna.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "latitude": {
                            "description": "Current latitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "longitude": {
                            "description": "Current longitude of vehicle in WGS 84 geodetic coordinates, as measured at the position of GNSS receiver antenna.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "timestamp": {
                            "description": "Timestamp from GNSS system for current location, formatted according to ISO 8601 with UTC time zone.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.String"
                                }
                            ]
                        }
                    }
                },
                "exterior": {
                    "description": "Information about exterior measured by vehicle.",
                    "type": "object",
                    "properties": {
                        "airTemperature": {
                            "description": "Air temperature outside the vehicle.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        }
                    }
                },
                "fuelSystem": {
                    "description": "Powertrain data for battery management, etc.",
                    "type": "object",
                    "properties": {
                        "combustionEngine": {
                            "description": "Engine-specific data, stopping at the bell housing.",
                            "type": "object",
                            "properties": {
                                "ect": {
                                    "description": "Engine coolant temperature.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                },
                                "engineOilLevel": {
                                    "description": "Engine oil level. Must be one of: ['CRITICALLY_LOW', 'LOW', 'NORMAL', 'HIGH', 'CRITICALLY_HIGH']",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.String"
                                        }
                                    ]
                                },
                                "speed": {
                                    "description": "Engine speed measured as rotations per minute.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                },
                                "tps": {
                                    "description": "Current throttle position.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                }
                            }
                        },
                        "fuelSystem": {
                            "description": "Fuel system data.",
                            "type": "object",
                            "properties": {
                                "level": {
                                    "description": "Level in fuel tank as percent of capacity. 0 = empty. 100 = full.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                },
                                "range": {
                                    "description": "Remaining range in meters using only liquid fuel.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                },
                                "supportedFuel": {
                                    "description": "Detailed information on fuels supported by the vehicle. Identifiers originating from DIN EN 16942:2021-08, appendix B, with additional suffix for octane (RON) where relevant. RON 95 is sometimes referred to as Super, RON 98 as Super Plus. Must be one of: ['E5_95', 'E5_98', 'E10_95', 'E10_98', 'E85', 'B7', 'B10', 'B20', 'B30', 'B100', 'XTL', 'LPG', 'CNG', 'LNG', 'H2', 'OTHER']",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/null.String"
                                    }
                                },
                                "supportedFuelTypes": {
                                    "description": "High level information of fuel types supported If a vehicle also has an electric drivetrain (e.g. hybrid) that will be obvious from the PowerTrain.Type signal. Must be one of: ['GASOLINE', 'DIESEL', 'E85', 'LPG', 'CNG', 'LNG', 'H2', 'OTHER']",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/null.String"
                                    }
                                }
                            }
                        },
                        "range": {
                            "description": "Remaining range in meters using all energy sources available in the vehicle.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "tractionBattery": {
                            "description": "Battery Management data.",
                            "type": "object",
                            "properties": {
                                "charging": {
                                    "description": "Properties related to battery charging.",
                                    "type": "object",
                                    "properties": {
                                        "chargeLimit": {
                                            "description": "Target charge limit (state of charge) for battery.",
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/null.Float64"
                                                }
                                            ]
                                        },
                                        "isCharging": {
                                            "description": "True if charging is ongoing. Charging is considered to be ongoing if energy is flowing from charger to vehicle.",
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/null.Bool"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "grossCapacity": {
                                    "description": "Gross capacity of the battery.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                },
                                "netCapacity": {
                                    "description": "Total net capacity of the battery considering aging.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                },
                                "range": {
                                    "description": "Remaining range in meters using only battery.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                },
                                "stateOfCharge": {
                                    "description": "Information on the state of charge of the vehicle's high voltage battery.",
                                    "type": "object",
                                    "properties": {
                                        "current": {
                                            "description": "Physical state of charge of the high voltage battery, relative to net capacity. This is not necessarily the state of charge being displayed to the customer.",
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/null.Float64"
                                                }
                                            ]
                                        },
                                        "displayed": {
                                            "description": "State of charge displayed to the customer.",
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/null.Float64"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "transmission": {
                            "description": "Transmission-specific data, stopping at the drive shafts.",
                            "type": "object",
                            "properties": {
                                "travelledDistance": {
                                    "description": "Odometer reading, total distance travelled during the lifetime of the transmission.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/null.Float64"
                                        }
                                    ]
                                }
                            }
                        },
                        "type": {
                            "description": "Defines the powertrain type of the vehicle. For vehicles with a combustion engine (including hybrids) more detailed information on fuels supported can be found in FuelSystem.SupportedFuelTypes and FuelSystem.SupportedFuels. Must be one of: ['COMBUSTION', 'HYBRID', 'ELECTRIC']",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.String"
                                }
                            ]
                        }
                    }
                },
                "lowVoltageBattery": {
                    "description": "Signals related to low voltage battery.",
                    "type": "object",
                    "properties": {
                        "currentVoltage": {
                            "description": "Current Voltage of the low voltage battery.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        }
                    }
                },
                "obd": {
                    "description": "OBD data.",
                    "type": "object",
                    "properties": {
                        "barometricPressure": {
                            "description": "PID 33 - Barometric pressure",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "engineLoad": {
                            "description": "PID 04 - Engine load in percent - 0 = no load, 100 = full load",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "engineSpeed": {
                            "description": "PID 0C - Engine speed measured as rotations per minute",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "fuelType": {
                            "description": "PID 51 - Fuel type",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.String"
                                }
                            ]
                        },
                        "intakeTemp": {
                            "description": "PID 0F - Intake temperature",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "runTime": {
                            "description": "PID 1F - Engine run time",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        },
                        "throttlePosition": {
                            "description": "PID 11 - Throttle position - 0 = closed throttle, 100 = open throttle",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Float64"
                                }
                            ]
                        }
                    }
                },
                "speed": {
                    "description": "Vehicle speed.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/null.Float64"
                        }
                    ]
                },
                "travelledDistance": {
                    "description": "Odometer reading, total distance travelled during the lifetime of the vehicle.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/null.Float64"
                        }
                    ]
                },
                "vehicleIdentification": {
                    "description": "Attributes that identify a vehicle.",
                    "type": "object",
                    "properties": {
                        "brand": {
                            "description": "Vehicle brand or manufacturer.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.String"
                                }
                            ]
                        },
                        "model": {
                            "description": "Vehicle model.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.String"
                                }
                            ]
                        },
                        "vin": {
                            "description": "17-character Vehicle Identification Number (VIN) as defined by ISO 3779.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.String"
                                }
                            ]
                        },
                        "year": {
                            "description": "Model year of the vehicle.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/null.Int64"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "internal_controllers.DailyDistanceDay": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                }
            }
        },
        "internal_controllers.DailyDistanceResp": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_controllers.DailyDistanceDay"
                    }
                }
            }
        },
        "null.Bool": {
            "type": "object",
            "properties": {
                "bool": {
                    "type": "boolean"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "null.Float64": {
            "type": "object",
            "properties": {
                "float64": {
                    "type": "number"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "null.Int64": {
            "type": "object",
            "properties": {
                "int64": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "null.String": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "smartcar.TirePressure": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Deprecated: Should use DataAge instead of Age",
                    "type": "string"
                },
                "backLeft": {
                    "type": "number"
                },
                "backRight": {
                    "type": "number"
                },
                "dataAge": {
                    "type": "string"
                },
                "frontLeft": {
                    "type": "number"
                },
                "frontRight": {
                    "type": "number"
                },
                "requestId": {
                    "type": "string"
                },
                "unitSystem": {
                    "$ref": "#/definitions/smartcar.UnitSystem"
                }
            }
        },
        "smartcar.UnitSystem": {
            "type": "string",
            "enum": [
                "metric",
                "imperial"
            ],
            "x-enum-varnames": [
                "Metric",
                "Imperial"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
