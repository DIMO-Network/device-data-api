definitions:
  github_com_DIMO-Network_device-data-api_internal_response.DeviceSnapshot:
    properties:
      ambientTemp:
        type: number
      batteryCapacity:
        type: integer
      batteryVoltage:
        type: number
      chargeLimit:
        type: number
      charging:
        type: boolean
      fuelPercentRemaining:
        type: number
      latitude:
        type: number
      longitude:
        type: number
      odometer:
        type: number
      oil:
        type: number
      range:
        type: number
      recordCreatedAt:
        type: string
      recordUpdatedAt:
        type: string
      soc:
        type: number
      tirePressure:
        $ref: '#/definitions/smartcar.TirePressure'
    type: object
  internal_controllers.DailyDistanceDay:
    properties:
      date:
        type: string
      distance:
        type: number
    type: object
  internal_controllers.DailyDistanceResp:
    properties:
      days:
        items:
          $ref: '#/definitions/internal_controllers.DailyDistanceDay'
        type: array
    type: object
  smartcar.TirePressure:
    properties:
      age:
        description: 'Deprecated: Should use DataAge instead of Age'
        type: string
      backLeft:
        type: number
      backRight:
        type: number
      dataAge:
        type: string
      frontLeft:
        type: number
      frontRight:
        type: number
      requestId:
        type: string
      unitSystem:
        $ref: '#/definitions/smartcar.UnitSystem'
    type: object
  smartcar.UnitSystem:
    enum:
    - metric
    - imperial
    type: string
    x-enum-varnames:
    - Metric
    - Imperial
info:
  contact: {}
  title: DIMO Device Data API
  version: "1.0"
paths:
  /v1/autopi/last-seen/{ethAddr}:
    get:
      description: Specific for AutoPi - get when a device last sent data
      parameters:
      - description: device ethereum address
        in: path
        name: ethAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: invalid eth addr
        "404":
          description: no device found with eth addr or no data found
        "500":
          description: no device found or no data found, or other transient error
      security:
      - PreSharedKey: []
      tags:
      - autopi
  /v1/user/device-data/{userDeviceID}/daily-distance:
    get:
      description: Get kilometers driven for a userDeviceID each day.
      parameters:
      - description: user device id
        in: path
        name: userDeviceID
        required: true
        type: string
      - description: IANAS time zone id, e.g., America/Los_Angeles
        in: query
        name: time_zone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.DailyDistanceResp'
        "404":
          description: no device found for user with provided parameters
      security:
      - BearerAuth: []
      tags:
      - device-data
  /v1/user/device-data/{userDeviceID}/distance-driven:
    get:
      description: |-
        Get kilometers driven for a userDeviceID since connected (ie. since we have data available)
        if it returns 0 for distanceDriven it means we have no odometer data.
      parameters:
      - description: user device id
        in: path
        name: userDeviceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: no device found for user with provided parameters
      security:
      - BearerAuth: []
      tags:
      - device-data
  /v1/user/device-data/{userDeviceID}/export/json/email:
    post:
      description: |-
        Enqueues a data export job for the specified device. A link to download
        a large JSON file of signals will be emailed to the address on file for the
        current user.
      parameters:
      - description: Device id
        example: 2OQjmqUt9dguQbJt1WImuVfje3W
        in: path
        name: userDeviceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - device-data
  /v1/user/device-data/{userDeviceID}/historical:
    get:
      description: Get all historical data for a userDeviceID, within start and end
        range
      parameters:
      - description: user id
        in: path
        name: userDeviceID
        required: true
        type: string
      - description: startDate eg 2022-01-02. if empty two weeks back
        in: query
        name: startDate
        type: string
      - description: endDate eg 2022-03-01. if empty today
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - device-data
  /v1/user/device-data/{userDeviceID}/status:
    get:
      description: |-
        Returns the latest status update for the device. May return 404 if the
        user does not have a device with the ID, or if no status updates have come. Note this endpoint also exists under nft_controllers
      parameters:
      - description: user device ID
        in: path
        name: user_device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_DIMO-Network_device-data-api_internal_response.DeviceSnapshot'
      security:
      - BearerAuth: []
      tags:
      - device-data
  /v1/vehicle/{tokenID}/history:
    get:
      description: Get all historical data for a tokenID, within start and end range
      parameters:
      - description: token id
        in: path
        name: tokenID
        required: true
        type: integer
      - description: startDate eg 2022-01-02. if empty two weeks back
        in: query
        name: startDate
        type: string
      - description: endDate eg 2022-03-01. if empty today
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - device-data
  /v1/vehicle/{tokenId}/status:
    get:
      description: Returns the latest status update for the vehicle with a given token
        id.
      parameters:
      - description: token id
        in: path
        name: tokenId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_DIMO-Network_device-data-api_internal_response.DeviceSnapshot'
        "404":
          description: Not Found
      tags:
      - device-data
  /v2/vehicle/{tokenID}/history:
    get:
      description: Get all historical data for a tokenID, within start and end range
      parameters:
      - description: token id
        in: path
        name: tokenID
        required: true
        type: integer
      - description: startDate eg 2022-01-02. if empty two weeks back
        in: query
        name: startDate
        type: string
      - description: endDate eg 2022-03-01. if empty today
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - device-data
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
